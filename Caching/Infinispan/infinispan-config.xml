Infinispan --> Distributed in-memory cache, key value NoSQL store, Distributed Storage, 

<?xml version="1.0" encoding="UTF-8"?>
<infinispan>
    <cache-container ...>
        <!-- if you need to persist counter (i.e. the counter's value survive cluster restarts), global state needs to be configured -->
        <global-state>
            ...
        </global-state>
        <!-- your caches configuration goes here -->
         <counters xmlns="urn:infinispan:config:counters:9.1" num-owners="2" reliability="AVAILABLE"/>
    </cache-container>
</infinispan>

Infinispan 9.4.0 final version:
=======================================================
<dependency>
  <groupId>org.infinispan</groupId>
  <artifactId>infinispan-core</artifactId>
  <version>9.4.0.Final</version>
</dependency>

EmbeddedCacheManager cacheManager = new DefaultCacheManager();
cacheManager.stop();

GlobalConfigurationBuilder global = GlobalConfigurationBuilder.defaultClusteredBuilder();
global.transport().clusterName("WeatherApp");
cacheManager = new DefaultCacheManager(global.build());


LocationWeather weather = cache.get(location);
if (weather == null) {
  weather = fetchWeather(location);
  cache.put(location, weather);
}
return weather;





References:
https://infinispan.org/tutorials/embedded/step-1/
